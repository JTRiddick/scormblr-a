{"version":3,"sources":["ShowCardsComponent.js"],"names":["window","SCA","undefined","ShowCardsComponent","state","cards","count","changedCallback","console","log","setState","Data","getCards","emitter","on","EE","off","i","removeCard","map","x","index","removeAtIndex","React","Component"],"mappings":";;;;;;;;;;AAAA,IAAIA,OAAOC,GAAP,KAAeC,SAAnB,EAA8B;AAAEF,SAAOC,GAAP,GAAa,EAAb;AAAkB;;AAEjD,aAAW;AAAA,MAEJE,kBAFI;AAAA;;AAIR,kCAAa;AAAA;;AAAA;;AAEX,YAAKC,KAAL,GAAa,EAACC,OAAM,EAAP,EAAUC,OAAM,CAAhB,EAAb;AAFW;AAGZ;;AAPO;AAAA;AAAA,0CASW;AAAA;;AACjB,aAAKC,eAAL,GAAuB,YAAM;AAC3BC,kBAAQC,GAAR,CAAY,WAAZ;AACA,iBAAKC,QAAL,CAAc;AACZL,mBAAOJ,IAAIU,IAAJ,CAASC,QAAT;AADK,WAAd;AAGAJ,kBAAQC,GAAR,CAAY,kDAAZ;AACD,SAND;;AAQAR,YAAIU,IAAJ,CAASE,OAAT,CAAiBC,EAAjB,CAAoB,SAApB,EAA+B,KAAKP,eAApC;AACD;AAnBO;AAAA;AAAA,6CAqBe;AACrBC,gBAAQC,GAAR,CAAY,YAAZ;AACAM,WAAGJ,IAAH,CAAQE,OAAR,CAAgBG,GAAhB,CAAoB,SAApB,EAA+B,KAAKT,eAApC;AACD;AAxBO;AAAA;AAAA,oCA0BMU,CA1BN,EA0BQ;AACdhB,YAAIU,IAAJ,CAASO,UAAT,CAAoBD,CAApB;AACAT,gBAAQC,GAAR,CAAY,YAAZ,EAAyBQ,CAAzB;AACD;AA7BO;AAAA;AAAA,+BA+BA;AAAA;;AAEN,eAAQ;AAAA;AAAA;AAEJ;AAAA;AAAA,cAAK,WAAU,WAAf;AACA;AAAA;AAAA;AACG,mBAAKb,KAAL,CAAWC,KAAX,CAAiBc,GAAjB,CAAqB,UAACC,CAAD,EAAGC,KAAH,EAAW;AAC/B,uBAAO;AAAA;AAAA,oBAAI,KAAKA,KAAT,EAAgB,SAAS,mBAAM;AAAC,6BAAKC,aAAL,CAAmBD,KAAnB;AAA0B,qBAA1D;AAA6DD;AAA7D,iBAAP;AACD,eAFA;AADH;AADA,WAFI;AASN;AAAA;AAAA;AAAA;AAAoB,iBAAKhB,KAAL,CAAWE;AAA/B;AATM,SAAR;AAWD;AA5CO;;AAAA;AAAA,IAEuBiB,MAAMC,SAF7B;;AAgDVvB,MAAIE,kBAAJ,GAAyBA,kBAAzB;AACD,CAjDA,GAAD","file":"ShowCardsComponent.js","sourcesContent":["if (window.SCA === undefined) { window.SCA = {} ;}\n\n(function() {\n\n  class ShowCardsComponent extends React.Component {\n\n    constructor(){\n      super();\n      this.state = {cards:[],count:0};\n    }\n\n    componentDidMount(){\n      this.changedCallback = () => {\n        console.log('updating!');\n        this.setState({\n          cards: SCA.Data.getCards()\n        })\n        console.log('show cards component callback got cards to state');\n      };\n\n      SCA.Data.emitter.on('changed', this.changedCallback);\n    }\n\n    componentWillUnmount() {\n      console.log('unmounting');\n      EE.Data.emitter.off('changed', this.changedCallback);\n    }\n\n    removeAtIndex(i){\n      SCA.Data.removeCard(i);\n      console.log('removing @',i);\n    }\n\n    render(){\n\n      return (<div>\n\n          <div className='cardstack'>\n          <ul>\n            {this.state.cards.map((x,index)=>{\n              return <li key={index} onClick={() => {this.removeAtIndex(index)}}>{x}</li>\n            })}\n          </ul>\n        </div>\n        <p>Times Shuffled: {this.state.count}</p>\n      </div>)\n    }\n  }\n\n\n  SCA.ShowCardsComponent = ShowCardsComponent;\n}());\n"]}